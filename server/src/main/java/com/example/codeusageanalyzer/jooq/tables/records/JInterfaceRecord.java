/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq.tables.records;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.codeusageanalyzer.jooq.tables.JInterface;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.9.6" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JInterfaceRecord extends UpdatableRecordImpl<JInterfaceRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = -1155141962;

    /**
     * Setter for <code>PUBLIC.INTERFACE.INTERFACE_ID</code>.
     */
    public void setInterfaceId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.INTERFACE.INTERFACE_ID</code>.
     */
    public Long getInterfaceId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.INTERFACE.CLASS_ID</code>.
     */
    public void setClassId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.INTERFACE.CLASS_ID</code>.
     */
    public Long getClassId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.INTERFACE.INTERFACE_NAME</code>.
     */
    public void setInterfaceName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.INTERFACE.INTERFACE_NAME</code>.
     */
    public String getInterfaceName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return JInterface.INTERFACE.INTERFACE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return JInterface.INTERFACE.CLASS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return JInterface.INTERFACE.INTERFACE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getInterfaceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getClassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getInterfaceName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JInterfaceRecord value1(Long value) {
        setInterfaceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JInterfaceRecord value2(Long value) {
        setClassId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JInterfaceRecord value3(String value) {
        setInterfaceName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JInterfaceRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JInterfaceRecord
     */
    public JInterfaceRecord() {
        super(JInterface.INTERFACE);
    }

    /**
     * Create a detached, initialised JInterfaceRecord
     */
    public JInterfaceRecord(Long interfaceId, Long classId, String interfaceName) {
        super(JInterface.INTERFACE);

        set(0, interfaceId);
        set(1, classId);
        set(2, interfaceName);
    }
}
