/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq.tables.records;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.codeusageanalyzer.jooq.tables.JClass;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.9.6" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JClassRecord extends UpdatableRecordImpl<JClassRecord>
        implements Record5<Long, String, Long, String, String> {

    private static final long serialVersionUID = -378380611;

    /**
     * Setter for <code>PUBLIC.CLASS.CLASS_ID</code>.
     */
    public void setClassId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CLASS.CLASS_ID</code>.
     */
    public Long getClassId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CLASS.CLASS_NAME</code>.
     */
    public void setClassName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CLASS.CLASS_NAME</code>.
     */
    public String getClassName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CLASS.MODULE_ID</code>.
     */
    public void setModuleId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CLASS.MODULE_ID</code>.
     */
    public Long getModuleId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CLASS.SUPER_CLASS_NAME</code>.
     */
    public void setSuperClassName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CLASS.SUPER_CLASS_NAME</code>.
     */
    public String getSuperClassName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CLASS.PATH</code>.
     */
    public void setPath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.CLASS.PATH</code>.
     */
    public String getPath() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Long, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Long, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return JClass.CLASS.CLASS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return JClass.CLASS.CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return JClass.CLASS.MODULE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return JClass.CLASS.SUPER_CLASS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return JClass.CLASS.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getClassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getModuleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSuperClassName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord value1(Long value) {
        setClassId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord value2(String value) {
        setClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord value3(Long value) {
        setModuleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord value4(String value) {
        setSuperClassName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord value5(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JClassRecord values(Long value1, String value2, Long value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JClassRecord
     */
    public JClassRecord() {
        super(JClass.CLASS);
    }

    /**
     * Create a detached, initialised JClassRecord
     */
    public JClassRecord(Long classId, String className, Long moduleId, String superClassName, String path) {
        super(JClass.CLASS);

        set(0, classId);
        set(1, className);
        set(2, moduleId);
        set(3, superClassName);
        set(4, path);
    }
}
