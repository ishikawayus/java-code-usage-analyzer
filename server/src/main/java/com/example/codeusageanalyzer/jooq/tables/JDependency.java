/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq.tables;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import com.example.codeusageanalyzer.jooq.JPublic;
import com.example.codeusageanalyzer.jooq.Keys;
import com.example.codeusageanalyzer.jooq.tables.records.JDependencyRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.9.6" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JDependency extends TableImpl<JDependencyRecord> {

    private static final long serialVersionUID = -1671581280;

    /**
     * The reference instance of <code>PUBLIC.DEPENDENCY</code>
     */
    public static final JDependency DEPENDENCY = new JDependency();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JDependencyRecord> getRecordType() {
        return JDependencyRecord.class;
    }

    /**
     * The column <code>PUBLIC.DEPENDENCY.DEPENDENCY_ID</code>.
     */
    public final TableField<JDependencyRecord, Long> DEPENDENCY_ID = createField("DEPENDENCY_ID",
            org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DEPENDENCY.ARTIFACT_ID</code>.
     */
    public final TableField<JDependencyRecord, String> ARTIFACT_ID = createField("ARTIFACT_ID",
            org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DEPENDENCY.GROUP_ID</code>.
     */
    public final TableField<JDependencyRecord, String> GROUP_ID = createField("GROUP_ID",
            org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DEPENDENCY.MODULE_ID</code>.
     */
    public final TableField<JDependencyRecord, Long> MODULE_ID = createField("MODULE_ID",
            org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DEPENDENCY.VERSION</code>.
     */
    public final TableField<JDependencyRecord, String> VERSION = createField("VERSION",
            org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.DEPENDENCY</code> table reference
     */
    public JDependency() {
        this("DEPENDENCY", null);
    }

    /**
     * Create an aliased <code>PUBLIC.DEPENDENCY</code> table reference
     */
    public JDependency(String alias) {
        this(alias, DEPENDENCY);
    }

    private JDependency(String alias, Table<JDependencyRecord> aliased) {
        this(alias, aliased, null);
    }

    private JDependency(String alias, Table<JDependencyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JDependencyRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JDependencyRecord>> getKeys() {
        return Arrays.<UniqueKey<JDependencyRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JDependency as(String alias) {
        return new JDependency(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JDependency rename(String name) {
        return new JDependency(name, null);
    }
}
