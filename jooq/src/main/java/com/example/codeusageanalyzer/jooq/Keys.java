/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq;


import com.example.codeusageanalyzer.jooq.tables.JCallee;
import com.example.codeusageanalyzer.jooq.tables.JClass;
import com.example.codeusageanalyzer.jooq.tables.JDependency;
import com.example.codeusageanalyzer.jooq.tables.JInterface;
import com.example.codeusageanalyzer.jooq.tables.JMethod;
import com.example.codeusageanalyzer.jooq.tables.JModule;
import com.example.codeusageanalyzer.jooq.tables.JRepository;
import com.example.codeusageanalyzer.jooq.tables.records.JCalleeRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JClassRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JDependencyRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JInterfaceRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JMethodRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JModuleRecord;
import com.example.codeusageanalyzer.jooq.tables.records.JRepositoryRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JCalleeRecord> CONSTRAINT_7 = Internal.createUniqueKey(JCallee.CALLEE, DSL.name("CONSTRAINT_7"), new TableField[] { JCallee.CALLEE.CALLEE_ID }, true);
    public static final UniqueKey<JClassRecord> CONSTRAINT_3 = Internal.createUniqueKey(JClass.CLASS, DSL.name("CONSTRAINT_3"), new TableField[] { JClass.CLASS.CLASS_ID }, true);
    public static final UniqueKey<JDependencyRecord> CONSTRAINT_1 = Internal.createUniqueKey(JDependency.DEPENDENCY, DSL.name("CONSTRAINT_1"), new TableField[] { JDependency.DEPENDENCY.DEPENDENCY_ID }, true);
    public static final UniqueKey<JInterfaceRecord> CONSTRAINT_C = Internal.createUniqueKey(JInterface.INTERFACE, DSL.name("CONSTRAINT_C"), new TableField[] { JInterface.INTERFACE.INTERFACE_ID }, true);
    public static final UniqueKey<JMethodRecord> CONSTRAINT_8 = Internal.createUniqueKey(JMethod.METHOD, DSL.name("CONSTRAINT_8"), new TableField[] { JMethod.METHOD.METHOD_ID }, true);
    public static final UniqueKey<JModuleRecord> CONSTRAINT_87 = Internal.createUniqueKey(JModule.MODULE, DSL.name("CONSTRAINT_87"), new TableField[] { JModule.MODULE.MODULE_ID }, true);
    public static final UniqueKey<JRepositoryRecord> CONSTRAINT_9 = Internal.createUniqueKey(JRepository.REPOSITORY, DSL.name("CONSTRAINT_9"), new TableField[] { JRepository.REPOSITORY.REPOSITORY_ID }, true);
}
