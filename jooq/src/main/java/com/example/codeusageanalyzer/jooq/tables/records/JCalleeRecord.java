/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq.tables.records;


import com.example.codeusageanalyzer.jooq.tables.JCallee;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCalleeRecord extends UpdatableRecordImpl<JCalleeRecord> implements Record6<String, String, Boolean, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CALLEE.CALLEE_ID</code>.
     */
    public void setCalleeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>CALLEE.CALLEE_ID</code>.
     */
    public String getCalleeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>CALLEE.DESCRIPTOR</code>.
     */
    public void setDescriptor(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>CALLEE.DESCRIPTOR</code>.
     */
    public String getDescriptor() {
        return (String) get(1);
    }

    /**
     * Setter for <code>CALLEE.INVOKE_DYNAMIC</code>.
     */
    public void setInvokeDynamic(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>CALLEE.INVOKE_DYNAMIC</code>.
     */
    public Boolean getInvokeDynamic() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>CALLEE.METHOD_ID</code>.
     */
    public void setMethodId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>CALLEE.METHOD_ID</code>.
     */
    public String getMethodId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>CALLEE.METHOD_NAME</code>.
     */
    public void setMethodName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>CALLEE.METHOD_NAME</code>.
     */
    public String getMethodName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>CALLEE.OWNER_NAME</code>.
     */
    public void setOwnerName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>CALLEE.OWNER_NAME</code>.
     */
    public String getOwnerName() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, Boolean, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, Boolean, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return JCallee.CALLEE.CALLEE_ID;
    }

    @Override
    public Field<String> field2() {
        return JCallee.CALLEE.DESCRIPTOR;
    }

    @Override
    public Field<Boolean> field3() {
        return JCallee.CALLEE.INVOKE_DYNAMIC;
    }

    @Override
    public Field<String> field4() {
        return JCallee.CALLEE.METHOD_ID;
    }

    @Override
    public Field<String> field5() {
        return JCallee.CALLEE.METHOD_NAME;
    }

    @Override
    public Field<String> field6() {
        return JCallee.CALLEE.OWNER_NAME;
    }

    @Override
    public String component1() {
        return getCalleeId();
    }

    @Override
    public String component2() {
        return getDescriptor();
    }

    @Override
    public Boolean component3() {
        return getInvokeDynamic();
    }

    @Override
    public String component4() {
        return getMethodId();
    }

    @Override
    public String component5() {
        return getMethodName();
    }

    @Override
    public String component6() {
        return getOwnerName();
    }

    @Override
    public String value1() {
        return getCalleeId();
    }

    @Override
    public String value2() {
        return getDescriptor();
    }

    @Override
    public Boolean value3() {
        return getInvokeDynamic();
    }

    @Override
    public String value4() {
        return getMethodId();
    }

    @Override
    public String value5() {
        return getMethodName();
    }

    @Override
    public String value6() {
        return getOwnerName();
    }

    @Override
    public JCalleeRecord value1(String value) {
        setCalleeId(value);
        return this;
    }

    @Override
    public JCalleeRecord value2(String value) {
        setDescriptor(value);
        return this;
    }

    @Override
    public JCalleeRecord value3(Boolean value) {
        setInvokeDynamic(value);
        return this;
    }

    @Override
    public JCalleeRecord value4(String value) {
        setMethodId(value);
        return this;
    }

    @Override
    public JCalleeRecord value5(String value) {
        setMethodName(value);
        return this;
    }

    @Override
    public JCalleeRecord value6(String value) {
        setOwnerName(value);
        return this;
    }

    @Override
    public JCalleeRecord values(String value1, String value2, Boolean value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JCalleeRecord
     */
    public JCalleeRecord() {
        super(JCallee.CALLEE);
    }

    /**
     * Create a detached, initialised JCalleeRecord
     */
    public JCalleeRecord(String calleeId, String descriptor, Boolean invokeDynamic, String methodId, String methodName, String ownerName) {
        super(JCallee.CALLEE);

        setCalleeId(calleeId);
        setDescriptor(descriptor);
        setInvokeDynamic(invokeDynamic);
        setMethodId(methodId);
        setMethodName(methodName);
        setOwnerName(ownerName);
    }
}
