/*
 * This file is generated by jOOQ.
*/
package com.example.codeusageanalyzer.jooq.tables.daos;


import com.example.codeusageanalyzer.jooq.tables.JModule;
import com.example.codeusageanalyzer.jooq.tables.pojos.JModulePojo;
import com.example.codeusageanalyzer.jooq.tables.records.JModuleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JModuleDao extends DAOImpl<JModuleRecord, JModulePojo, String> {

    /**
     * Create a new JModuleDao without any configuration
     */
    public JModuleDao() {
        super(JModule.MODULE, JModulePojo.class);
    }

    /**
     * Create a new JModuleDao with an attached configuration
     */
    public JModuleDao(Configuration configuration) {
        super(JModule.MODULE, JModulePojo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(JModulePojo object) {
        return object.getModuleId();
    }

    /**
     * Fetch records that have <code>MODULE_ID IN (values)</code>
     */
    public List<JModulePojo> fetchByJModuleId(String... values) {
        return fetch(JModule.MODULE.MODULE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>MODULE_ID = value</code>
     */
    public JModulePojo fetchOneByJModuleId(String value) {
        return fetchOne(JModule.MODULE.MODULE_ID, value);
    }

    /**
     * Fetch records that have <code>ARTIFACT_ID IN (values)</code>
     */
    public List<JModulePojo> fetchByJArtifactId(String... values) {
        return fetch(JModule.MODULE.ARTIFACT_ID, values);
    }

    /**
     * Fetch records that have <code>GROUP_ID IN (values)</code>
     */
    public List<JModulePojo> fetchByJGroupId(String... values) {
        return fetch(JModule.MODULE.GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>PATH IN (values)</code>
     */
    public List<JModulePojo> fetchByJPath(String... values) {
        return fetch(JModule.MODULE.PATH, values);
    }

    /**
     * Fetch records that have <code>REPOSITORY_ID IN (values)</code>
     */
    public List<JModulePojo> fetchByJRepositoryId(String... values) {
        return fetch(JModule.MODULE.REPOSITORY_ID, values);
    }

    /**
     * Fetch records that have <code>VERSION IN (values)</code>
     */
    public List<JModulePojo> fetchByJVersion(String... values) {
        return fetch(JModule.MODULE.VERSION, values);
    }
}
