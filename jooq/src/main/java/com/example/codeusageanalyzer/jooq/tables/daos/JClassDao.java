/*
 * This file is generated by jOOQ.
*/
package com.example.codeusageanalyzer.jooq.tables.daos;


import com.example.codeusageanalyzer.jooq.tables.JClass;
import com.example.codeusageanalyzer.jooq.tables.pojos.JClassPojo;
import com.example.codeusageanalyzer.jooq.tables.records.JClassRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JClassDao extends DAOImpl<JClassRecord, JClassPojo, String> {

    /**
     * Create a new JClassDao without any configuration
     */
    public JClassDao() {
        super(JClass.CLASS, JClassPojo.class);
    }

    /**
     * Create a new JClassDao with an attached configuration
     */
    public JClassDao(Configuration configuration) {
        super(JClass.CLASS, JClassPojo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(JClassPojo object) {
        return object.getClassId();
    }

    /**
     * Fetch records that have <code>CLASS_ID IN (values)</code>
     */
    public List<JClassPojo> fetchByJClassId(String... values) {
        return fetch(JClass.CLASS.CLASS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>CLASS_ID = value</code>
     */
    public JClassPojo fetchOneByJClassId(String value) {
        return fetchOne(JClass.CLASS.CLASS_ID, value);
    }

    /**
     * Fetch records that have <code>CLASS_NAME IN (values)</code>
     */
    public List<JClassPojo> fetchByJClassName(String... values) {
        return fetch(JClass.CLASS.CLASS_NAME, values);
    }

    /**
     * Fetch records that have <code>MODULE_ID IN (values)</code>
     */
    public List<JClassPojo> fetchByJModuleId(String... values) {
        return fetch(JClass.CLASS.MODULE_ID, values);
    }

    /**
     * Fetch records that have <code>SUPER_CLASS_NAME IN (values)</code>
     */
    public List<JClassPojo> fetchByJSuperClassName(String... values) {
        return fetch(JClass.CLASS.SUPER_CLASS_NAME, values);
    }
}
