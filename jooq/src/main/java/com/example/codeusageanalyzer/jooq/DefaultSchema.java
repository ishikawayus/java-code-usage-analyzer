/*
 * This file is generated by jOOQ.
 */
package com.example.codeusageanalyzer.jooq;


import com.example.codeusageanalyzer.jooq.tables.JCallee;
import com.example.codeusageanalyzer.jooq.tables.JClass;
import com.example.codeusageanalyzer.jooq.tables.JDependency;
import com.example.codeusageanalyzer.jooq.tables.JInterface;
import com.example.codeusageanalyzer.jooq.tables.JMethod;
import com.example.codeusageanalyzer.jooq.tables.JModule;
import com.example.codeusageanalyzer.jooq.tables.JRepository;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>CALLEE</code>.
     */
    public final JCallee CALLEE = JCallee.CALLEE;

    /**
     * The table <code>CLASS</code>.
     */
    public final JClass CLASS = JClass.CLASS;

    /**
     * The table <code>DEPENDENCY</code>.
     */
    public final JDependency DEPENDENCY = JDependency.DEPENDENCY;

    /**
     * The table <code>INTERFACE</code>.
     */
    public final JInterface INTERFACE = JInterface.INTERFACE;

    /**
     * The table <code>METHOD</code>.
     */
    public final JMethod METHOD = JMethod.METHOD;

    /**
     * The table <code>MODULE</code>.
     */
    public final JModule MODULE = JModule.MODULE;

    /**
     * The table <code>REPOSITORY</code>.
     */
    public final JRepository REPOSITORY = JRepository.REPOSITORY;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            JCallee.CALLEE,
            JClass.CLASS,
            JDependency.DEPENDENCY,
            JInterface.INTERFACE,
            JMethod.METHOD,
            JModule.MODULE,
            JRepository.REPOSITORY);
    }
}
